// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.btn {
  display: inline-block;
  font-family: $btn-font-family;
  font-weight: $btn-font-weight;
  color: $body-color;
  text-align: center;
  text-decoration: if($link-decoration == none, null, none);
  white-space: $btn-white-space;
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-line-height, $btn-border-radius);
  @include transition($btn-transition);

  @include hover() {
    color: $body-color;
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }

  &:not(:disabled):not(.disabled) {
    cursor: if($enable-pointer-cursor-for-buttons, pointer, null);

    &:active,
    &.active {
      @include box-shadow($btn-active-box-shadow);

      &:focus {
        @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
      }
    }
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}


//
// Alternate buttons
//

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @include button-variant($value, $value);
  }
}

@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
  }
}


//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-normal;
  color: $link-color;
  text-decoration: $link-decoration;

  @include hover() {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
    pointer-events: none;
  }

  // No need for an active state here
}


//
// Button Sizes
//

.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-line-height-lg, $btn-border-radius-lg);
}

.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-line-height-sm, $btn-border-radius-sm);
}


//
// Block button
//

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: $btn-block-spacing-y;
  }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

// CUMSTOM

.btn-outline-light {
  color: $white;
  border-width: 3px;
  border-radius: 12px;
  padding: 9px 30px;

  &:hover {
    color: $dark;
  }
}

.btn.border-transparent {
  border-color: transparent;
}

.btn-with-facebook {
  background: $blue-1;
  color: $white;
  position: relative;
  width: 76px;
  height: 76px;
  border-radius: 20px;
  padding: 0;
  overflow: hidden;
  border: none;

  i {
    font-size: 60px;
    position: absolute;
    bottom: -6px;
    left: 14px;
  }

  &:hover{
    color: $white;
  }
}

.btn-with-google{
  height: 76px;
  border-radius: 20px;
  font-size: 18px;
  border-width: 2px;

  svg{
    margin: 0 12px;
  }
}

.y-btn-lg{
  height: 76px;
  border-radius: 20px;
  font-size: 24px;
}

.btn-purple{
  background: $blue-1;
  color: $white;

  &:hover{
    color: $white;
  }
}

.btn-green{
  background: $green;
  color: $white;

  &:hover{
    color: $white;
  }
}

.btn-right-icon{
  position: relative;
  padding-right: 42px;

  i{
    position: absolute;
    top: 0;
    right: 0;
    width: 32px;
    background: #ffffff61;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }
}

.y-btn{
  border-radius: 6px;
  border-width: 1px;

  &.btn-xs{
    font-size: 12px;
    padding: 7px 16px;
  }
}

.btn-warning-gradient {
  color: #fff;
  background: $btn-orange-gradient;
  font-size: 24px;
  padding: 14px 33px;
  border-radius: 18px;
  border: none;
  box-shadow: 0 0 0 8px rgb(255 255 255 / 25%);

  &:hover {
    box-shadow: 0 0 0 8px rgb(255 255 255 / 30%);
    background: $btn-orange-gradient-hover;
    color: $white;
  }

  &:active {
    box-shadow: 0 0 0 8px rgb(255 255 255 / 35%);
    color: $white !important;
  }

  &:focus {
    box-shadow: 0 0 0 8px rgb(255 255 255 / 35%) !important;
    color: $white !important;
  }
}

.btn-circle-sm{
  height: 100px;
  width: 100px;
  border-radius: 100%;
}
